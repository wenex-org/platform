# docker build -t wenex/platform:latest .
x-common: &common
  image: wenex/platform:latest
  env_file:
    - .env
  network_mode: host

services:
  gateway:
    profiles: [gateway, platform, services]
    container_name: platform-gateway
    ports:
      - 3010:3010 # REST
    environment:
      SERVICE_NAME: gateway
    <<: *common

  auth:
    profiles: [auth, platform, services]
    container_name: platform-auth
    ports:
      - 3020:3020 # REST
      - 5020:5020 # GRPC
    environment:
      SERVICE_NAME: auth
    <<: *common

  domain:
    profiles: [domain, platform, services]
    container_name: platform-domain
    ports:
      - 3030:3030 # REST
      - 5030:5030 # GRPC
    environment:
      SERVICE_NAME: domain
    <<: *common

  context:
    profiles: [context, platform, services]
    container_name: platform-context
    ports:
      - 3040:3040 # REST
      - 5040:5040 # GRPC
    environment:
      SERVICE_NAME: context
    <<: *common

  essential:
    profiles: [essential, platform, services]
    container_name: platform-essential
    ports:
      - 3050:3050 # REST
      - 5050:5050 # GRPC
    environment:
      SERVICE_NAME: essential
    <<: *common

  financial:
    profiles: [financial, platform, services]
    container_name: platform-financial
    ports:
      - 3060:3060 # REST
      - 5060:5060 # GRPC
    environment:
      SERVICE_NAME: financial
    <<: *common

  general:
    profiles: [general, platform, services]
    container_name: platform-general
    ports:
      - 3070:3070 # REST
      - 5070:5070 # GRPC
    environment:
      SERVICE_NAME: general
    <<: *common

  identity:
    profiles: [identity, platform, services]
    container_name: platform-identity
    ports:
      - 3080:3080 # REST
      - 5080:5080 # GRPC
    environment:
      SERVICE_NAME: identity
    <<: *common

  special:
    profiles: [special, platform, services]
    container_name: platform-special
    ports:
      - 3090:3090 # REST
      - 5090:5090 # GRPC
    environment:
      SERVICE_NAME: special
    <<: *common

  touch:
    profiles: [touch, platform, services]
    container_name: platform-touch
    ports:
      - 3100:3100 # REST
      - 5100:5100 # GRPC
    environment:
      SERVICE_NAME: touch
    <<: *common

  content:
    profiles: [content, platform, services]
    container_name: platform-content
    ports:
      - 3110:3110 # REST
      - 5110:5110 # GRPC
    environment:
      SERVICE_NAME: content
    <<: *common

  logistic:
    profiles: [logistic, platform, services]
    container_name: platform-logistic
    ports:
      - 3120:3120 # REST
      - 5120:5120 # GRPC
    environment:
      SERVICE_NAME: logistic
    <<: *common

  conjoint:
    profiles: [conjoint, platform, services]
    container_name: platform-conjoint
    ports:
      - 3130:3130 # REST
      - 5130:5130 # GRPC
    environment:
      SERVICE_NAME: conjoint
    <<: *common

  # ---------
  # Workers
  # ---------

  watcher:
    profiles: [watcher, platform, workers]
    container_name: platform-watcher
    ports:
      - 4040:4040 # REST
    environment:
      SERVICE_NAME: watcher
    <<: *common

  preserver:
    profiles: [preserver, platform, workers]
    container_name: platform-preserver
    ports:
      - 4030:4030 # REST
      - 6030:6030 # GRPC
    environment:
      SERVICE_NAME: preserver
    <<: *common

  observer:
    profiles: [observer, platform, workers]
    container_name: platform-observer
    ports:
      - 4020:4020 # REST
    environment:
      SERVICE_NAME: observer
    <<: *common

  dispatcher:
    profiles: [dispatcher, platform, workers]
    container_name: platform-dispatcher
    ports:
      - 4010:4010 # REST
    environment:
      SERVICE_NAME: dispatcher
    <<: *common

  # ---------
  # Commands
  # ---------

  db-clean:
    profiles:
      - db-clean
    entrypoint: ['bash', '-c', 'npm run db:clean']
    <<: *common

  db-index:
    profiles:
      - db-index
    entrypoint: ['bash', '-c', 'npm run db:index']
    <<: *common

  db-seed:
    profiles:
      - db-seed
    entrypoint: ['bash', '-c', 'npm run db:seed']
    <<: *common

  storage-init:
    profiles:
      - storage-init
    entrypoint: ['bash', '-c', 'npm run storage:init']
    <<: *common

  utility-init:
    profiles:
      - utility-init
    entrypoint: ['bash', '-c', 'npm run utility:init']
    <<: *common

  kafka-connect:
    profiles:
      - kafka-connect
    entrypoint: ['bash', '-c', 'npm run script:kafka-connect']
    <<: *common
