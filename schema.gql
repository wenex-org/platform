# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TotalSerializer {
  total: Int!
}

type GrantTimeSerializer {
  cron_exp: String!
  duration: Float!
}

type GrantSerializer {
  owner: JSON!
  shares: [JSON]
  groups: [String]
  clients: [JSON]
  props: JSON
  tags: [String]
  id: String!
  ref: String
  created_at: Date!
  created_by: String!
  created_in: String!
  updated_at: Date
  updated_by: String
  updated_in: String
  deleted_at: Date
  deleted_by: String
  deleted_in: String
  restored_at: Date
  restored_by: String
  restored_in: String
  description: String
  version: String!
  rand: String!
  timestamp: String!
  action: String!
  object: String!
  field: [String]
  filter: [String]
  location: [String]
  time: [GrantTimeSerializer]
  subject: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type GrantDataSerializer {
  data: GrantSerializer
}

type GrantItemsSerializer {
  items: [GrantSerializer]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  countGrant(filter: QueryFilterDto!): TotalSerializer!
  findGrant(filter: FilterDto!): GrantItemsSerializer!
  findGrantById(id: String!, ref: String): GrantDataSerializer!
}

input QueryFilterDto {
  query: JSON!
}

input FilterDto {
  query: JSON!
  populate: [PopulateDto!]
  projection: JSON
  pagination: PaginationDto
}

input PopulateDto {
  match: JSON
  select: JSON
  options: PaginationDto
  path: String!
}

input PaginationDto {
  sort: JSON
  limit: Float
  skip: Float
}

type Mutation {
  createGrant(data: CreateGrantDto!): GrantDataSerializer!
  createGrantBulk(data: CreateGrantItemsDto!): GrantItemsSerializer!
  deleteGrantById(id: String!, ref: String): GrantDataSerializer!
  restoreGrantById(id: String!, ref: String): GrantDataSerializer!
  destroyGrantById(id: String!, ref: String): GrantDataSerializer!
  updateGrantBulk(data: UpdateGrantDto!, filter: QueryFilterDto!): TotalSerializer!
  updateGrantById(id: String!, data: UpdateGrantDto!, ref: String): GrantDataSerializer!
}

input CreateGrantDto {
  field: [String]
  filter: [String]
  location: [String]
  time: [CreateGrantTimeDto]
  subject: String!
  action: Action!
  object: Resource!
}

input CreateGrantTimeDto {
  cron_exp: String!
  duration: Float!
}

enum Action {
  Any
  Create
  Read
  Update
  Delete
  Restore
  Destroy
  Emit
  Send
  Init
  Verify
  Upload
  Download
  CreateOwn
  ReadOwn
  UpdateOwn
  DeleteOwn
  RestoreOwn
  DestroyOwn
  CreateShare
  ReadShare
  UpdateShare
  DeleteShare
  RestoreShare
  DestroyShare
  CreateGroup
  ReadGroup
  UpdateGroup
  DeleteGroup
  RestoreGroup
  DestroyGroup
  CreateClient
  ReadClient
  UpdateClient
  DeleteClient
  RestoreClient
  DestroyClient
}

enum Resource {
  All
  Auth
  AuthGrants
}

input CreateGrantItemsDto {
  items: [CreateGrantDto!]!
}

input UpdateGrantDto {
  subject: String
  action: Action
  object: Resource
  field: [String!]
  filter: [String!]
  location: [String!]
  time: [UpdateGrantTimeDto!]
}

input UpdateGrantTimeDto {
  cron_exp: String!
  duration: Float!
}